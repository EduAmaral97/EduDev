/*
Titulo: Z_KARDEX 

Por: Eduardo Jorge

Em: 18/11/2020

Descrição: Tabela unica com entradas, saidas, movimentação internas, devoluções, cancelamentos e etc.

Obs: tabela contem produtos e data unica de movimento (Reconmenda-se analise de apenas 1 produto ou de apenas 1 data)
*/

CREATE PROCEDURE Z_KARDEX AS


/*------------------ PRÉ CONFERENCIA -------------------*/


DELETE FROM ZKARDEX

/*------------------ SD1 - ENTRADA -------------------*/


INSERT INTO ZKARDEX
( 
	ZK_FILIAL		 ,
	ZK_SERIE		 ,
	ZK_DOC			 ,
	ZK_CODPROD		 ,
	ZK_PRODUTO		 ,
	ZK_COD_APRE		 ,
	ZK_UM			 ,
	ZK_GRUPO_PROD	 ,
	ZK_REGI_PROD	 ,
	ZK_ITEM			 ,
	ZK_QTD			 ,
	ZK_VLR_UNI		 ,
	ZK_VLR_ITEM		 ,
	ZK_CUSTO_B1		 ,
	ZK_CUSTO_D3		 ,
	ZK_COD_ARMZ		 ,
	ZK_ARMAZEM		 ,
	ZK_DT_MOV		 ,
	ZK_TES			 ,
	ZK_DESC_TES		 ,
	ZK_CFOP			 ,
	ZK_FIN_CUSTO	 ,
	ZK_ESTOQUE		 ,
	ZK_TIPO_DOC		 ,
	ZK_DESC_TIPO	 ,
	ZK_DT_CANCEL	 ,
	ZK_OBS			 ,
	ZK_COD_CLIFOR	 ,
	ZK_CLIFOR		 ,
	ZK_MAXDT		 ,
	ZK_HRDT			 ,
	ZK_IDENT		 
)


SELECT 
SD1.D1_FILIAL		AS FILIAL,
SD1.D1_SERIE		AS SERIE,
SD1.D1_DOC			AS DOC,
SD1.D1_COD			AS CODPROD,
SB1.B1_ZDESRDZ		AS PRODUTO,
SB1.B1_ZAPRES1		AS COD_APRE,
SB1.B1_UM			AS UM,
SB1.B1_GRUPO		AS GRUOPO_PROD,
SB1.B1_ZLIBREG		AS REGI_PROD,
SD1.D1_ITEM			AS ITEM,
SD1.D1_QUANT		AS QTD,
SD1.D1_VUNIT		AS VLR_UNI,
SD1.D1_TOTAL		AS VLR_ITEM,
SB1.B1_CUSTD		AS CUSTO_B1,
0					AS CUSTO_D3,
SD1.D1_LOCAL		AS COD_ARMZ,
NNR.NNR_DESCRI		AS ARMAZEM,
SD1.D1_DTDIGIT		AS DT_MOV,
SD1.D1_TES			AS TES,
SF4.F4_TEXTO		AS DESC_TES,	
SD1.D1_CF			AS CFOP,
SF4.F4_DUPLIC		AS FIN_CUSTO,
SF4.F4_ESTOQUE		AS ESTOQUE,
SD1.D1_TIPO			AS TIPO_DOC,
CASE
	WHEN SD1.D1_TIPO = 'N'
THEN 'NORMAL'
	WHEN SD1.D1_TIPO = 'B'
THEN 'BENEFICIAMENTO'
	WHEN SD1.D1_TIPO = 'D'
THEN 'DEVOLUÇÃO'
ELSE ''
END AS DESC_TIPO,
SFT.FT_DTCANC		AS DT_CANCEL,
SFT.FT_OBSERV		AS OBS,
CASE
	WHEN SA1.A1_COD <> ''
THEN SA1.A1_COD
	WHEN SA2.A2_COD <> ''
THEN SA2.A2_COD
ELSE ''
END AS COD_CLIFOR,
CASE
	WHEN SA1.A1_NOME <> ''
THEN SA1.A1_NOME
	WHEN SA2.A2_NOME <> ''
THEN SA2.A2_NOME
ELSE ''
END AS CLIFOR,
MAX(SF1.F1_DTDIGIT)	AS MAXDT,
MAX(SF1.F1_HORA)	AS MAXHR,
'ENTRADA'			AS IDENT
FROM SD1010 SD1
LEFT JOIN SB1010 SB1 ON SB1.D_E_L_E_T_ = '' AND SB1.B1_COD = SD1.D1_COD
LEFT JOIN SF1010 SF1 ON SF1.D_E_L_E_T_ = '' AND SF1.F1_FILIAL = SD1.D1_FILIAL AND SF1.F1_SERIE = SD1.D1_SERIE AND SF1.F1_DOC = SD1.D1_DOC AND SF1.F1_FORNECE = SD1.D1_FORNECE AND SF1.F1_LOJA = SD1.D1_LOJA
LEFT JOIN SFT010 SFT ON SFT.FT_FILIAL = SD1.D1_FILIAL AND SFT.FT_SERIE = SD1.D1_SERIE AND SFT.FT_NFISCAL = SD1.D1_DOC AND SFT.FT_CLIEFOR = SD1.D1_FORNECE AND SFT.FT_LOJA = SD1.D1_LOJA AND SD1.D1_COD = SFT.FT_PRODUTO AND SD1.D1_ITEM = SFT.FT_ITEM  
LEFT JOIN SA1010 SA1 ON SA1.D_E_L_E_T_ = '' AND SA1.A1_COD = SD1.D1_FORNECE AND SA1.A1_LOJA = SD1.D1_LOJA AND SD1.D1_TIPO = 'D'
LEFT JOIN SA2010 SA2 ON SA2.D_E_L_E_T_ = '' AND SA2.A2_COD = SD1.D1_FORNECE AND SA2.A2_LOJA = SD1.D1_LOJA AND SD1.D1_TIPO <> 'D'
LEFT JOIN SF4010 SF4 ON SF4.D_E_L_E_T_ = '' AND SF4.F4_CODIGO = SD1.D1_TES
LEFT JOIN NNR010 NNR ON NNR.D_E_L_E_T_ = '' AND NNR.NNR_CODIGO = SD1.D1_LOCAL
WHERE 1=1
AND SD1.D_E_L_E_T_ = ''
AND SD1.D1_TIPO IN ('D', 'N', 'B')
GROUP BY
SD1.D1_FILIAL,
SD1.D1_SERIE,
SD1.D1_DOC,
SD1.D1_COD,
SB1.B1_ZDESRDZ,
SB1.B1_ZAPRES1,
SB1.B1_UM,
SB1.B1_GRUPO,
SB1.B1_ZLIBREG,
SD1.D1_ITEM,
SD1.D1_QUANT,
SD1.D1_VUNIT,
SD1.D1_TOTAL,
SB1.B1_CUSTD,
SD1.D1_LOCAL,
NNR.NNR_DESCRI,
SD1.D1_DTDIGIT,
SD1.D1_TES,	
SF4.F4_TEXTO,	 
SD1.D1_CF,		   
SF4.F4_DUPLIC,		
SF4.F4_ESTOQUE,	   
SD1.D1_TIPO,			
SFT.FT_DTCANC,	   
SFT.FT_OBSERV,
SA1.A1_COD,
SA2.A2_COD,
SA1.A1_NOME,
SA2.A2_NOME


/*------------------ SD2 - SAIDA -------------------*/



INSERT INTO ZKARDEX
( 
	ZK_FILIAL		 ,
	ZK_SERIE		 ,
	ZK_DOC			 ,
	ZK_CODPROD		 ,
	ZK_PRODUTO		 ,
	ZK_COD_APRE		 ,
	ZK_UM			 ,
	ZK_GRUPO_PROD	 ,
	ZK_REGI_PROD	 ,
	ZK_ITEM			 ,
	ZK_QTD			 ,
	ZK_VLR_UNI		 ,
	ZK_VLR_ITEM		 ,
	ZK_CUSTO_B1		 ,
	ZK_CUSTO_D3		 ,
	ZK_COD_ARMZ		 ,
	ZK_ARMAZEM		 ,
	ZK_DT_MOV		 ,
	ZK_TES			 ,
	ZK_DESC_TES		 ,
	ZK_CFOP			 ,
	ZK_FIN_CUSTO	 ,
	ZK_ESTOQUE		 ,
	ZK_TIPO_DOC		 ,
	ZK_DESC_TIPO	 ,
	ZK_DT_CANCEL	 ,
	ZK_OBS			 ,
	ZK_COD_CLIFOR	 ,
	ZK_CLIFOR		 ,
	ZK_MAXDT		 ,
	ZK_HRDT			 ,
	ZK_IDENT		 
)



SELECT 
SD2.D2_FILIAL		AS FILIAL,
SD2.D2_SERIE		AS SERIE,
SD2.D2_DOC			AS DOC,
SD2.D2_COD			AS CODPROD,
SB1.B1_ZDESRDZ		AS PRODUTO,
SB1.B1_ZAPRES1		AS COD_APRE,
SB1.B1_UM			AS UM,
SB1.B1_GRUPO		AS GRUOPO_PROD,
SB1.B1_ZLIBREG		AS REGI_PROD,
SD2.D2_ITEM			AS ITEM,
SD2.D2_QUANT		AS QTD,
SD2.D2_PRCVEN		AS VLR_UNI,
SD2.D2_TOTAL		AS VLR_ITEM,
SB1.B1_CUSTD		AS CUSTO_B1,
0					AS CUSTO_D3,
SD2.D2_LOCAL		AS COD_ARMZ,
NNR.NNR_DESCRI		AS ARMAZEM,
SD2.D2_EMISSAO	  	AS DT_MOV,
SD2.D2_TES			AS TES,
SF4.F4_TEXTO		AS DESC_TES,	
SD2.D2_CF			AS CFOP,
SF4.F4_DUPLIC		AS FINANCEIRO,
SF4.F4_ESTOQUE		AS ESTOQUE,
SD2.D2_TIPO			AS TIPO_DOC,
CASE
	WHEN SD2.D2_TIPO = 'N'
THEN 'NORMAL'
	WHEN SD2.D2_TIPO = 'B'
THEN 'BENEFICIAMENTO'
	WHEN SD2.D2_TIPO = 'D'
THEN 'DEVOLUÇÃO'
ELSE ''
END AS DESC_TIPO,
SFT.FT_DTCANC		AS DT_CANCEL,
SFT.FT_OBSERV		AS OBS,
CASE
	WHEN SA1.A1_COD <> ''
THEN SA1.A1_COD
	WHEN SA2.A2_COD <> ''
THEN SA2.A2_COD
ELSE ''
END AS COD_CLIFOR,
CASE
	WHEN SA1.A1_NOME <> ''
THEN SA1.A1_NOME
	WHEN SA2.A2_NOME <> ''
THEN SA2.A2_NOME
ELSE ''
END AS CLIFOR,
MAX(SF2.F2_DTDIGIT)	AS MAXDT,
MAX(SF2.F2_HORA)	AS MAXHR,
'SAIDA'				AS IDENT
FROM SD2010 SD2
LEFT JOIN SB1010 SB1 ON SB1.D_E_L_E_T_ = '' AND SB1.B1_COD = SD2.D2_COD
LEFT JOIN SF2010 SF2 ON SF2.D_E_L_E_T_ = '' AND SF2.F2_FILIAL = SD2.D2_FILIAL AND SF2.F2_SERIE = SD2.D2_SERIE AND SF2.F2_DOC = SD2.D2_DOC AND SF2.F2_CLIENTE = SD2.D2_CLIENTE AND SF2.F2_LOJA = SD2.D2_LOJA
LEFT JOIN SFT010 SFT ON SFT.FT_FILIAL = SD2.D2_FILIAL AND SFT.FT_SERIE = SD2.D2_SERIE AND SFT.FT_NFISCAL = SD2.D2_DOC AND SFT.FT_CLIEFOR = SD2.D2_CLIENTE AND SFT.FT_LOJA = SD2.D2_LOJA AND SD2.D2_COD = SFT.FT_PRODUTO AND SD2.D2_ITEM = SFT.FT_ITEM  
LEFT JOIN SA1010 SA1 ON SA1.D_E_L_E_T_ = '' AND SA1.A1_COD = SD2.D2_CLIENTE AND SA1.A1_LOJA = SD2.D2_LOJA AND SD2.D2_TIPO <> 'D'
LEFT JOIN SA2010 SA2 ON SA2.D_E_L_E_T_ = '' AND SA2.A2_COD = SD2.D2_CLIENTE AND SA2.A2_LOJA = SD2.D2_LOJA AND SD2.D2_TIPO = 'D'
LEFT JOIN SF4010 SF4 ON SF4.D_E_L_E_T_ = '' AND SF4.F4_CODIGO = SD2.D2_TES
LEFT JOIN NNR010 NNR ON NNR.D_E_L_E_T_ = '' AND NNR.NNR_CODIGO = SD2.D2_LOCAL
WHERE 1=1
AND SD2.D_E_L_E_T_ = ''
AND SD2.D2_TIPO IN ('D', 'N', 'B')
--AND SFT.FT_DTCANC <> ''
--AND SD2.D2_DOC = '000003031' 
--AND SD2.D2_DOC = '000034365'
GROUP BY
SD2.D2_FILIAL,
SD2.D2_SERIE,
SD2.D2_DOC,
SD2.D2_COD,
SB1.B1_ZDESRDZ,
SB1.B1_ZAPRES1,
SB1.B1_UM,
SB1.B1_GRUPO,
SB1.B1_ZLIBREG,
SD2.D2_ITEM,
SD2.D2_QUANT,
SD2.D2_PRCVEN,
SD2.D2_TOTAL,
SB1.B1_CUSTD,
SD2.D2_LOCAL,
NNR.NNR_DESCRI,
SD2.D2_EMISSAO,
SD2.D2_TES,	
SF4.F4_TEXTO,	 
SD2.D2_CF,		   
SF4.F4_DUPLIC,		
SF4.F4_ESTOQUE,	   
SD2.D2_TIPO,			
SFT.FT_DTCANC,	   
SFT.FT_OBSERV,
SA1.A1_COD,
SA2.A2_COD,
SA1.A1_NOME,
SA2.A2_NOME






/*------------------ SD3 - MOV. INTERNA -------------------*/



INSERT INTO ZKARDEX
( 
	ZK_FILIAL		 ,
	ZK_SERIE		 ,
	ZK_DOC			 ,
	ZK_CODPROD		 ,
	ZK_PRODUTO		 ,
	ZK_COD_APRE		 ,
	ZK_UM			 ,
	ZK_GRUPO_PROD	 ,
	ZK_REGI_PROD	 ,
	ZK_ITEM			 ,
	ZK_QTD			 ,
	ZK_VLR_UNI		 ,
	ZK_VLR_ITEM		 ,
	ZK_CUSTO_B1		 ,
	ZK_CUSTO_D3		 ,
	ZK_COD_ARMZ		 ,
	ZK_ARMAZEM		 ,
	ZK_DT_MOV		 ,
	ZK_TES			 ,
	ZK_DESC_TES		 ,
	ZK_CFOP			 ,
	ZK_FIN_CUSTO	 ,
	ZK_ESTOQUE		 ,
	ZK_TIPO_DOC		 ,
	ZK_DESC_TIPO	 ,
	ZK_DT_CANCEL	 ,
	ZK_OBS			 ,
	ZK_COD_CLIFOR	 ,
	ZK_CLIFOR		 ,
	ZK_MAXDT		 ,
	ZK_HRDT			 ,
	ZK_IDENT		 
)

SELECT 
SD3.D3_FILIAL	AS FILIAL,
''				AS SERIE,		
SD3.D3_DOC		AS DOC,
SD3.D3_COD		AS CODPROD,
SB1.B1_ZDESRDZ	AS PRODUTO,
SB1.B1_ZAPRES1	AS COD_APRE,
SB1.B1_UM		AS UM,
SB1.B1_GRUPO	AS GRUPO_PROD,
SB1.B1_ZLIBREG	AS REGI_PROD,
SD3.D3_ITEM		AS ITEM,
SD3.D3_QUANT	AS QTD,
CAST(0 AS FLOAT) AS VLR_UNI,	
CAST(0 AS FLOAT) AS VLR_ITEM,
SB1.B1_CUSTD	AS CUSTO_B1,
SD3.D3_CUSTO1 	AS CUSTO_D3,
SD3.D3_LOCAL	AS COD_ARMZ,
NNR.NNR_DESCRI	AS ARMAZEM,
SD3.D3_EMISSAO	AS DT_MOV,
SD3.D3_TM		AS TES,
CASE
	WHEN SD3.D3_TM = '499'
THEN 'ENTRADA MERC. ARMZ'
	WHEN SD3.D3_TM = '999'
THEN 'SAIDA MERC. ARMZ'
ELSE SF5.F5_TEXTO
END AS DESC_TES,
''			AS CFOP,
CASE
	WHEN SD3.D3_TM = '501'
THEN 'S'
ELSE 'N'
END AS FIN_CUSTO,
'S'			AS ESTOQUE,
'N'			AS TIPO_DOC,
'NORMAL'	AS DESC_TIPO,
''			AS DT_CANCEL,
''			AS OBS,
''			AS COD_CLIFOR,
''			AS CLIFOR,
''			AS MAXDT,
''			AS MAXHR,
'MOV. INTERNA' AS IDENT
FROM SD3010 SD3
LEFT JOIN SB1010 SB1 ON SB1.D_E_L_E_T_ = '' AND SB1.B1_COD = SD3.D3_COD
LEFT JOIN NNR010 NNR ON NNR.NNR_CODIGO = SD3.D3_LOCAL
LEFT JOIN SF5010 SF5 ON SF5.D_E_L_E_T_ = '' AND SF5.F5_CODIGO = SD3.D3_TM
WHERE 1=1
AND SD3.D_E_L_E_T_ = ''





GO